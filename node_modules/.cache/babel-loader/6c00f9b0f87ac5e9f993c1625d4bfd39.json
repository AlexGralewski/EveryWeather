{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Aleksander.DESKTOP-LAALHEM\\\\Desktop\\\\React\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\Aleksander.DESKTOP-LAALHEM\\\\Desktop\\\\React\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Aleksander.DESKTOP-LAALHEM\\\\Desktop\\\\React\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\Aleksander.DESKTOP-LAALHEM\\\\Desktop\\\\React\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Aleksander.DESKTOP-LAALHEM\\\\Desktop\\\\React\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Aleksander.DESKTOP-LAALHEM\\\\Desktop\\\\React\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import timestampToTime from\"../data/timestampToTime\";import CurrentWeatherDisplay from\"./CurrentWeatherDisplay\";import cities from\"../data/cities\";var WeatherApp=/*#__PURE__*/function(_React$Component){_inherits(WeatherApp,_React$Component);var _super=_createSuper(WeatherApp);function WeatherApp(){var _this;_classCallCheck(this,WeatherApp);_this=_super.call(this);_this.state={lat:\"52.24\",//latitude\nlong:\"21.02\",//longitude\ncity:\"\",//city of choice\ncountry:\"\",part:\"minutely,hourly\",//Excludes parts of weather data. Available values: \"current\", \"minutely\", \"hourly\", \"daily\", \"alerts\". Seperated by comma without spaces\nweatherApiKey:\"692d3bd12adf77c08728b7324d9f2b14\",//API key for OpenWeatherMapAPI\nweatherData:undefined,//data pulled from weather API\nlocationApiKey:\"44f5f3ce977746e7ab89ddeae84b48d3\",//API key for openCageData\nlocationData:undefined,//data pulled from location API\ncurrentDisplay:\"none\",formsDisplay:\"flex\",returnButtonDisplay:\"none\"};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleLatLongSubmit=_this.handleLatLongSubmit.bind(_assertThisInitialized(_this));_this.handleCitySubmit=_this.handleCitySubmit.bind(_assertThisInitialized(_this));_this.handlePositionSubmit=_this.handlePositionSubmit.bind(_assertThisInitialized(_this));_this.handleReturnButton=_this.handleReturnButton.bind(_assertThisInitialized(_this));return _this;}_createClass(WeatherApp,[{key:\"handleChange\",value:function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;this.setState(_defineProperty({},name,value));}},{key:\"handleLatLongSubmit\",value:function handleLatLongSubmit(event){var _this2=this;event.preventDefault();//URL string for weather API\nvar weatherApiUrl=\"https://api.openweathermap.org/data/2.5/onecall?lat=\"+this.state.lat%180+\"&lon=\"+this.state.long%180+\"&exclude=\"+this.state.part+\"&appid=\"+this.state.weatherApiKey;console.log(weatherApiUrl);var locationApiUrl=\"https://api.opencagedata.com/geocode/v1/json?q=\"+this.state.lat%180+\"+\"+this.state.long%180+\"&key=\"+this.state.locationApiKey;console.log(locationApiUrl);//fetch weather API\nfetch(weatherApiUrl).then(function(response){return response.json();}).then(function(res){_this2.setState({weatherData:res});}).catch(function(err){console.log(err);});fetch(locationApiUrl).then(function(response){return response.json();}).then(function(res){_this2.setState({locationData:res});}).catch(function(err){console.log(err);});this.setState({currentDisplay:\"flex\",formsDisplay:\"none\"});}},{key:\"handleCitySubmit\",value:function handleCitySubmit(event){var _this3=this;event.preventDefault();var cityIndex;for(cityIndex=0;cityIndex<cities.length;cityIndex++){if(cities[cityIndex].city===\"warsaw\"){this.setState({lat:cities[cityIndex].lat,long:cities[cityIndex].long});}}//URL string for weather API\nvar apiURL=\"https://api.openweathermap.org/data/2.5/onecall?lat=\"+this.state.lat%180+\"&lon=\"+this.state.long%180+\"&exclude=\"+this.state.part+\"&appid=\"+this.state.weatherApiKey;console.log(apiURL);//fetch API\nfetch(apiURL).then(function(response){return response.json();}).then(function(res){_this3.setState({data:res});}).catch(function(err){console.log(err);});}},{key:\"handlePositionSubmit\",value:function handlePositionSubmit(event){event.preventDefault();var position=navigator.geolocation.getCurrentPosition(function(position){console.log(position.coords.latitude);console.log(position.coords.longitude);return[position.coords.latitude];});console.log(position);}},{key:\"handleReturnButton\",value:function handleReturnButton(event){console.log(\"ckicked\");event.preventDefault();}},{key:\"render\",value:function render(){var _this$state=this.state,city=_this$state.city,lat=_this$state.lat,long=_this$state.long,weatherData=_this$state.weatherData,locationData=_this$state.locationData,currentDisplay=_this$state.currentDisplay,formsDisplay=_this$state.formsDisplay,returnButtonDisplay=_this$state.returnButtonDisplay;var current={};//assigning weather parameters\nif(weatherData!==undefined){//set current temperature\ncurrent.temp=Math.round(weatherData.current.temp-273.15);//set current sunrise and sunset\ncurrent.sunrise=timestampToTime(weatherData.current.sunrise);current.sunset=timestampToTime(weatherData.current.sunset);//set current weather\ncurrent.description=weatherData.current.weather[0].description;current.iconId=weatherData.current.weather[0].icon;}console.log(current);if(locationData!==undefined){var cityL=locationData.results[0].components.city;var countryL=locationData.results[0].components.country;}return/*#__PURE__*/React.createElement(\"div\",{className:\"weather-app\"},/*#__PURE__*/React.createElement(\"div\",{className:\"forms\",style:{display:formsDisplay}},/*#__PURE__*/React.createElement(\"div\",{className:\"lat-long-form\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleLatLongSubmit},/*#__PURE__*/React.createElement(\"label\",null,\"Enter latitude:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",step:\"0.001\",name:\"lat\",value:lat,onChange:this.handleChange,required:true})),/*#__PURE__*/React.createElement(\"label\",null,\"Enter longitude: \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",step:\"0.001\",name:\"long\",value:long,onChange:this.handleChange,required:true})),/*#__PURE__*/React.createElement(\"button\",null,\"Get current weather\"))),/*#__PURE__*/React.createElement(\"h1\",null,\"OR\"),/*#__PURE__*/React.createElement(\"div\",{className:\"city-form\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleCitySubmit},/*#__PURE__*/React.createElement(\"label\",null,\"Enter a name of a city:\",/*#__PURE__*/React.createElement(\"div\",{className:\"city-country-inputs\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"city\",value:city,onChange:this.handleChange,required:true}),/*#__PURE__*/React.createElement(\"select\",{value:this.state.country,name:\"country\",onChange:this.handleChange,required:true},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Country\"),/*#__PURE__*/React.createElement(\"option\",{value:\"poland\"},\"Poland\"),/*#__PURE__*/React.createElement(\"option\",{value:\"england\"},\"England\")))),/*#__PURE__*/React.createElement(\"button\",null,\"Get current weather\"))),/*#__PURE__*/React.createElement(\"h1\",null,\"OR\"),/*#__PURE__*/React.createElement(\"div\",{className:\"this-location-form\"},/*#__PURE__*/React.createElement(\"button\",{onClick:this.handlePositionSubmit},\"Get current weather from your location\"))),/*#__PURE__*/React.createElement(CurrentWeatherDisplay,{city:city,lat:lat,long:long,currentDisplay:currentDisplay,currentTemp:current.temp,currentDescription:current.description,currentIconId:current.iconId,currentSunrise:current.sunrise,currentSunset:current.sunset}),/*#__PURE__*/React.createElement(\"button\",{onClick:this.handleReturnButton,style:{display:returnButtonDisplay}},\"Return\"));}}]);return WeatherApp;}(React.Component);export default WeatherApp;","map":{"version":3,"sources":["C:/Users/Aleksander.DESKTOP-LAALHEM/Desktop/React/weather-app/src/components/WeatherApp.js"],"names":["React","timestampToTime","CurrentWeatherDisplay","cities","WeatherApp","state","lat","long","city","country","part","weatherApiKey","weatherData","undefined","locationApiKey","locationData","currentDisplay","formsDisplay","returnButtonDisplay","handleChange","bind","handleLatLongSubmit","handleCitySubmit","handlePositionSubmit","handleReturnButton","event","target","name","value","setState","preventDefault","weatherApiUrl","console","log","locationApiUrl","fetch","then","response","json","res","catch","err","cityIndex","length","apiURL","data","position","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","current","temp","Math","round","sunrise","sunset","description","weather","iconId","icon","cityL","results","components","countryL","display","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport timestampToTime from \"../data/timestampToTime\"\r\nimport CurrentWeatherDisplay from \"./CurrentWeatherDisplay\"\r\nimport cities from \"../data/cities\"\r\n\r\nclass WeatherApp extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      lat: \"52.24\", //latitude\r\n      long: \"21.02\", //longitude\r\n      city: \"\", //city of choice\r\n      country: \"\",\r\n      part: \"minutely,hourly\", //Excludes parts of weather data. Available values: \"current\", \"minutely\", \"hourly\", \"daily\", \"alerts\". Seperated by comma without spaces\r\n      weatherApiKey: \"692d3bd12adf77c08728b7324d9f2b14\", //API key for OpenWeatherMapAPI\r\n      weatherData: undefined, //data pulled from weather API\r\n      locationApiKey: \"44f5f3ce977746e7ab89ddeae84b48d3\", //API key for openCageData\r\n      locationData: undefined, //data pulled from location API\r\n      currentDisplay: \"none\",\r\n      formsDisplay: \"flex\",\r\n      returnButtonDisplay: \"none\"\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleLatLongSubmit = this.handleLatLongSubmit.bind(this)\r\n    this.handleCitySubmit = this.handleCitySubmit.bind(this)\r\n    this.handlePositionSubmit = this.handlePositionSubmit.bind(this)\r\n    this.handleReturnButton = this.handleReturnButton.bind(this)\r\n  }\r\n\r\n\r\n  handleChange(event) {\r\n    const {name, value} = event.target\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleLatLongSubmit(event) {\r\n    event.preventDefault()\r\n\r\n    //URL string for weather API\r\n    let weatherApiUrl = \"https://api.openweathermap.org/data/2.5/onecall?lat=\" + (this.state.lat % 180) + \"&lon=\" + (this.state.long % 180) + \"&exclude=\" + this.state.part + \"&appid=\" + this.state.weatherApiKey   \r\n    console.log(weatherApiUrl)\r\n    let locationApiUrl = \"https://api.opencagedata.com/geocode/v1/json?q=\" + (this.state.lat % 180) + \"+\" + (this.state.long % 180) + \"&key=\"  + this.state.locationApiKey  \r\n    console.log(locationApiUrl)\r\n    //fetch weather API\r\n    fetch(weatherApiUrl)\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        this.setState({weatherData: res})\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    \r\n    fetch(locationApiUrl)\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        this.setState({locationData: res})\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })      \r\n    this.setState({\r\n      currentDisplay: \"flex\",\r\n      formsDisplay: \"none\"\r\n    })\r\n  }\r\n\r\n\r\n\r\n  handleCitySubmit(event) {\r\n    event.preventDefault()\r\n    \r\n    let cityIndex\r\n    for (cityIndex = 0; cityIndex < cities.length; cityIndex++) {\r\n      if (cities[cityIndex].city === \"warsaw\") {\r\n        this.setState({\r\n          lat: cities[cityIndex].lat,\r\n          long: cities[cityIndex].long\r\n        })\r\n      }\r\n    }\r\n\r\n    //URL string for weather API\r\n    let apiURL = \"https://api.openweathermap.org/data/2.5/onecall?lat=\" + (this.state.lat % 180) + \"&lon=\" + (this.state.long % 180) + \"&exclude=\" + this.state.part + \"&appid=\" + this.state.weatherApiKey\r\n    console.log(apiURL)\r\n\r\n    //fetch API\r\n    fetch(apiURL)\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        this.setState({data: res});\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });   \r\n  }\r\n\r\n  handlePositionSubmit(event) {\r\n    event.preventDefault()\r\n\r\n\r\n    const position = navigator.geolocation.getCurrentPosition(position => {\r\n      console.log(position.coords.latitude)\r\n      console.log(position.coords.longitude)\r\n      return ([position.coords.latitude])\r\n    })\r\n\r\n    console.log(position)\r\n  }\r\n\r\n  handleReturnButton(event) {\r\n    console.log(\"ckicked\")\r\n    event.preventDefault()\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    const {city, lat, long, weatherData, locationData, currentDisplay, formsDisplay, returnButtonDisplay} = this.state\r\n    let current = {}\r\n    \r\n    //assigning weather parameters\r\n    if (weatherData !== undefined) {\r\n      //set current temperature\r\n      current.temp = Math.round(weatherData.current.temp - 273.15)\r\n      //set current sunrise and sunset\r\n      current.sunrise = timestampToTime(weatherData.current.sunrise)\r\n      current.sunset = timestampToTime(weatherData.current.sunset)\r\n      //set current weather\r\n      current.description = weatherData.current.weather[0].description\r\n      current.iconId = weatherData.current.weather[0].icon\r\n    } \r\n    console.log(current)\r\n\r\n    if (locationData !== undefined) {\r\n        const cityL = locationData.results[0].components.city\r\n        const countryL = locationData.results[0].components.country\r\n\r\n      }\r\n\r\n\r\n    return (\r\n      <div className=\"weather-app\">\r\n        <div className=\"forms\" style={{display:formsDisplay}}>\r\n          <div className=\"lat-long-form\">\r\n            <form onSubmit={this.handleLatLongSubmit}>\r\n              <label>\r\n                Enter latitude:<br />\r\n                <input \r\n                  type=\"number\"\r\n                  step=\"0.001\"\r\n                  name=\"lat\"\r\n                  value={lat}\r\n                  onChange={this.handleChange}\r\n                  required/> \r\n              </label>\r\n              <label>\r\n                Enter longitude: <br />\r\n                <input \r\n                  type=\"number\"\r\n                  step=\"0.001\"\r\n                  name=\"long\"\r\n                  value={long}\r\n                  onChange={this.handleChange}\r\n                  required/> \r\n              </label>\r\n              <button>Get current weather</button>\r\n            </form>\r\n          </div>\r\n          <h1>OR</h1>\r\n          <div className=\"city-form\">\r\n            <form onSubmit={this.handleCitySubmit}>\r\n            <label>\r\n              Enter a name of a city:\r\n              <div className=\"city-country-inputs\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  value = {city}\r\n                  onChange={this.handleChange}\r\n                  required/> \r\n                <select\r\n                  value={this.state.country}\r\n                  name=\"country\"\r\n                  onChange = {this.handleChange}\r\n                  required>\r\n                  <option value=\"\">Country</option>\r\n                  <option value=\"poland\">Poland</option>\r\n                  <option value=\"england\">England</option>\r\n                </select>\r\n              </div>\r\n            </label>\r\n            <button>Get current weather</button>\r\n          </form>\r\n          </div>\r\n          <h1>OR</h1>\r\n          <div className=\"this-location-form\">\r\n            <button onClick={this.handlePositionSubmit}>Get current weather from your location</button>          \r\n          </div>\r\n        </div>\r\n\r\n        <CurrentWeatherDisplay \r\n          city={city}\r\n          lat={lat}\r\n          long={long}\r\n          currentDisplay = {currentDisplay}\r\n          currentTemp = {current.temp}\r\n          currentDescription = {current.description}\r\n          currentIconId = {current.iconId}\r\n          currentSunrise = {current.sunrise}\r\n          currentSunset = {current.sunset}\r\n          />\r\n        <button onClick={this.handleReturnButton} style={{display:returnButtonDisplay}}>Return</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WeatherApp"]},"metadata":{},"sourceType":"module"}