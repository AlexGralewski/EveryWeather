{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aleksander.DESKTOP-LAALHEM\\\\Desktop\\\\React\\\\weather-app\\\\src\\\\components\\\\WeatherApp.js\";\nimport React from \"react\";\nimport timestampToTime from \"../data/timestampManagement\";\nimport CurrentWeatherDisplay from \"./CurrentWeatherDisplay\";\nconsole.log(timestampToTime(1603949182));\n\nclass WeatherApp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      lat: \"52.24\",\n      //latitude\n      long: \"21.02\",\n      //longitude\n      city: \"\",\n      //city of choice\n      part: \"minutely,hourly\",\n      //Excludes parts of weather data. Available values: \"current\", \"minutely\", \"hourly\", \"daily\", \"alerts\". Seperated by comma without spaces\n      apiKey: \"692d3bd12adf77c08728b7324d9f2b14\",\n      //APIkey for OpenWeatherMapAPI\n      data: undefined //data pulled from API\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLatLongSubmit = this.handleLatLongSubmit.bind(this);\n    this.handleCitySubmit = this.handleCitySubmit.bind(this);\n    this.handleLocationSubmit = this.handleLocationSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  handleLatLongSubmit(event) {\n    event.preventDefault();\n    console.log(this.state.lat);\n    let apiURL = \"https://api.openweathermap.org/data/2.5/onecall?lat=\" + this.state.lat % 180 + \"&lon=\" + this.state.long + \"&exclude=\" + this.state.part + \"&appid=\" + this.state.apiKey;\n    console.log(apiURL);\n    fetch(apiURL).then(response => response.json()).then(res => {\n      this.setState({\n        data: res\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(this.state.data);\n  }\n\n  handleCitySubmit(event) {\n    event.preventDefault();\n    console.log(\"handleCitySubmit\");\n  }\n\n  handleLocationSubmit(event) {\n    event.preventDefault();\n    console.log(\"handleLocationSubmit\");\n  }\n\n  render() {\n    const {\n      city,\n      lat,\n      long,\n      data\n    } = this.state;\n    let current = {};\n\n    if (data !== undefined) {\n      //set current temperature\n      current.temp = Math.floor(data.current.temp - 273.15); //set current sunrise and sunset\n\n      current.sunrise = timestampToTime(data.current.sunrise);\n      current.sunset = timestampToTime(data.current.sunset); //set current weather\n\n      current.weather = data.current.weather[0].main;\n      current.description = data.current.weather[0].description;\n      current.iconId = data.current.weather[0].icon;\n    }\n\n    console.log(current);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lat-long-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleLatLongSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Enter your latitude:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lat\",\n      value: lat,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \"Enter your longitude: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"long\",\n      value: long,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"OR\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"city-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleCitySubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Enter your city:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      value: city,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"OR\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"this-location-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleLocationSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"Get weather from your location\"))), /*#__PURE__*/React.createElement(CurrentWeatherDisplay, {\n      city: city,\n      lat: lat,\n      long: long,\n      currentTemp: current.temp,\n      currentWeather: current.weather,\n      currentDescription: current.description,\n      currentIconId: current.iconId,\n      currentSunrise: current.sunrise,\n      currentSunset: current.sunset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default WeatherApp;","map":{"version":3,"sources":["C:/Users/Aleksander.DESKTOP-LAALHEM/Desktop/React/weather-app/src/components/WeatherApp.js"],"names":["React","timestampToTime","CurrentWeatherDisplay","console","log","WeatherApp","Component","constructor","state","lat","long","city","part","apiKey","data","undefined","handleChange","bind","handleLatLongSubmit","handleCitySubmit","handleLocationSubmit","event","name","value","target","setState","preventDefault","apiURL","fetch","then","response","json","res","catch","err","render","current","temp","Math","floor","sunrise","sunset","weather","main","description","iconId","icon"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport timestampToTime from \"../data/timestampManagement\"\r\nimport CurrentWeatherDisplay from \"./CurrentWeatherDisplay\"\r\n\r\nconsole.log(timestampToTime(1603949182))\r\n\r\nclass WeatherApp extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      lat: \"52.24\", //latitude\r\n      long: \"21.02\", //longitude\r\n      city: \"\", //city of choice\r\n      part: \"minutely,hourly\", //Excludes parts of weather data. Available values: \"current\", \"minutely\", \"hourly\", \"daily\", \"alerts\". Seperated by comma without spaces\r\n      apiKey: \"692d3bd12adf77c08728b7324d9f2b14\", //APIkey for OpenWeatherMapAPI\r\n      data: undefined, //data pulled from API\r\n      \r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleLatLongSubmit = this.handleLatLongSubmit.bind(this)\r\n    this.handleCitySubmit = this.handleCitySubmit.bind(this)\r\n    this.handleLocationSubmit = this.handleLocationSubmit.bind(this)\r\n  }\r\n\r\n\r\n  handleChange(event) {\r\n    const {name, value} = event.target\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n    console.log(this.state)\r\n  }\r\n\r\n  handleLatLongSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(this.state.lat)\r\n    let apiURL = \"https://api.openweathermap.org/data/2.5/onecall?lat=\" + (this.state.lat % 180) + \"&lon=\" + this.state.long + \"&exclude=\" + this.state.part + \"&appid=\" + this.state.apiKey\r\n    console.log(apiURL)\r\n    fetch(apiURL)\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        this.setState({data: res});\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    console.log(this.state.data)\r\n  }\r\n\r\n  handleCitySubmit(event) {\r\n    event.preventDefault();\r\n    \r\n    console.log(\"handleCitySubmit\")    \r\n  }\r\n\r\n  handleLocationSubmit(event) {\r\n    event.preventDefault();\r\n    \r\n    console.log(\"handleLocationSubmit\")\r\n  }\r\n\r\n  render() {\r\n    const {city, lat, long, data} = this.state\r\n    let current = {}\r\n    if (data !== undefined) {\r\n      //set current temperature\r\n      current.temp = Math.floor(data.current.temp - 273.15)\r\n      //set current sunrise and sunset\r\n      current.sunrise = timestampToTime(data.current.sunrise)\r\n      current.sunset = timestampToTime(data.current.sunset)\r\n      //set current weather\r\n      current.weather = data.current.weather[0].main\r\n      current.description = data.current.weather[0].description\r\n      current.iconId = data.current.weather[0].icon\r\n    } \r\n    console.log(current)\r\n    \r\n    return (\r\n      <div className=\"weather-app\">\r\n        <div className=\"forms\">\r\n          <div className=\"lat-long-form\">\r\n            <form onSubmit={this.handleLatLongSubmit}>\r\n              <label>\r\n                Enter your latitude:<br />\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"lat\"\r\n                  value={lat}\r\n                  onChange={this.handleChange}/> \r\n              </label>\r\n              <label>\r\n                Enter your longitude: <br />\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"long\"\r\n                  value={long}\r\n                  onChange={this.handleChange}/> \r\n              </label>\r\n              <button>Submit</button>\r\n            </form>\r\n          </div>\r\n          <h1>OR</h1>\r\n          <div className=\"city-form\">\r\n            <form onSubmit={this.handleCitySubmit}>\r\n            <label>\r\n              Enter your city:\r\n              <br />\r\n              <input \r\n                type=\"text\"\r\n                name=\"city\"\r\n                value = {city}\r\n                onChange={this.handleChange}/> \r\n            </label>\r\n            <button>Submit</button>\r\n          </form>\r\n          </div>\r\n          <h1>OR</h1>\r\n          <div className=\"this-location-form\">\r\n            <button onClick={this.handleLocationSubmit}>Get weather from your location</button>          \r\n          </div>\r\n        </div>\r\n\r\n        <CurrentWeatherDisplay \r\n          city={city}\r\n          lat={lat}\r\n          long={long}\r\n          currentTemp = {current.temp}\r\n          currentWeather = {current.weather}\r\n          currentDescription = {current.description}\r\n          currentIconId = {current.iconId}\r\n          currentSunrise = {current.sunrise}\r\n          currentSunset = {current.sunset}\r\n          />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WeatherApp"]},"metadata":{},"sourceType":"module"}